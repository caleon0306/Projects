// Generated by view binder compiler. Do not edit!
package com.example.caloriecounter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.caloriecounter.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CreateMealBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonCreateMeal;

  @NonNull
  public final Button buttonGoToMeals;

  @NonNull
  public final TextInputEditText inputMealCalories;

  @NonNull
  public final TextInputEditText inputMealCarbs;

  @NonNull
  public final TextInputEditText inputMealFats;

  @NonNull
  public final TextInputEditText inputMealName;

  @NonNull
  public final TextInputEditText inputMealProtein;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView11;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView25;

  @NonNull
  public final TextView textViewResultCreateMeal;

  private CreateMealBinding(@NonNull LinearLayout rootView, @NonNull Button buttonCreateMeal,
      @NonNull Button buttonGoToMeals, @NonNull TextInputEditText inputMealCalories,
      @NonNull TextInputEditText inputMealCarbs, @NonNull TextInputEditText inputMealFats,
      @NonNull TextInputEditText inputMealName, @NonNull TextInputEditText inputMealProtein,
      @NonNull TextView textView10, @NonNull TextView textView11, @NonNull TextView textView12,
      @NonNull TextView textView13, @NonNull TextView textView14, @NonNull TextView textView25,
      @NonNull TextView textViewResultCreateMeal) {
    this.rootView = rootView;
    this.buttonCreateMeal = buttonCreateMeal;
    this.buttonGoToMeals = buttonGoToMeals;
    this.inputMealCalories = inputMealCalories;
    this.inputMealCarbs = inputMealCarbs;
    this.inputMealFats = inputMealFats;
    this.inputMealName = inputMealName;
    this.inputMealProtein = inputMealProtein;
    this.textView10 = textView10;
    this.textView11 = textView11;
    this.textView12 = textView12;
    this.textView13 = textView13;
    this.textView14 = textView14;
    this.textView25 = textView25;
    this.textViewResultCreateMeal = textViewResultCreateMeal;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CreateMealBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CreateMealBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.create_meal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CreateMealBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCreateMeal;
      Button buttonCreateMeal = ViewBindings.findChildViewById(rootView, id);
      if (buttonCreateMeal == null) {
        break missingId;
      }

      id = R.id.buttonGoToMeals;
      Button buttonGoToMeals = ViewBindings.findChildViewById(rootView, id);
      if (buttonGoToMeals == null) {
        break missingId;
      }

      id = R.id.inputMealCalories;
      TextInputEditText inputMealCalories = ViewBindings.findChildViewById(rootView, id);
      if (inputMealCalories == null) {
        break missingId;
      }

      id = R.id.inputMealCarbs;
      TextInputEditText inputMealCarbs = ViewBindings.findChildViewById(rootView, id);
      if (inputMealCarbs == null) {
        break missingId;
      }

      id = R.id.inputMealFats;
      TextInputEditText inputMealFats = ViewBindings.findChildViewById(rootView, id);
      if (inputMealFats == null) {
        break missingId;
      }

      id = R.id.inputMealName;
      TextInputEditText inputMealName = ViewBindings.findChildViewById(rootView, id);
      if (inputMealName == null) {
        break missingId;
      }

      id = R.id.inputMealProtein;
      TextInputEditText inputMealProtein = ViewBindings.findChildViewById(rootView, id);
      if (inputMealProtein == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = ViewBindings.findChildViewById(rootView, id);
      if (textView13 == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView25;
      TextView textView25 = ViewBindings.findChildViewById(rootView, id);
      if (textView25 == null) {
        break missingId;
      }

      id = R.id.textViewResultCreateMeal;
      TextView textViewResultCreateMeal = ViewBindings.findChildViewById(rootView, id);
      if (textViewResultCreateMeal == null) {
        break missingId;
      }

      return new CreateMealBinding((LinearLayout) rootView, buttonCreateMeal, buttonGoToMeals,
          inputMealCalories, inputMealCarbs, inputMealFats, inputMealName, inputMealProtein,
          textView10, textView11, textView12, textView13, textView14, textView25,
          textViewResultCreateMeal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
